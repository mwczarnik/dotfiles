---
- name: Install distro-agnostic packages
  hosts: all
  become: true

  tasks:

    - name: Install packages using package manager
      ansible.builtin.package:
        name:
          - curl
          - git
          - unzip
          - neovim
          - glances
          - wl-clipboard
          - fd-find
          - tmux
          - stow
          - direnv
          - kitty
          - powerline
        state: present

    - name: Install font-firacode or nerd font firacode
      ansible.builtin.shell: |
        mkdir -p ~/.local/share/fonts
        curl -fLo "FiraCode.zip" https://github.com/ryanoasis/nerd-fonts/releases/download/v2.3.3/FiraCode.zip
        unzip FiraCode.zip -d ~/.local/share/fonts
        fc-cache -f -v
      args:
        creates: ~/.local/share/fonts/FiraCode-Regular-Nerd-Font-Complete.ttf

    - name: Install vimplug
      ansible.builtin.shell: |
        curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

    - name: Install yazi
      ansible.builtin.shell: |
        curl -LO https://github.com/sxyazi/yazi/releases/latest/download/yazi-linux-x86_64.tar.gz
        tar -xzf yazi-linux-x86_64.tar.gz -C /usr/local/bin
      args:
        creates: /usr/local/bin/yazi


    - name: Install bash-git-prompt
      ansible.builtin.git:
        repo: https://github.com/magicmonty/bash-git-prompt.git
        dest: ~/.bash-git-prompt
        version: master

    - name: Install rust
      ansible.builtin.shell: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

    - block:
        - name: Install helm (Debian)
          ansible.builtin.apt:
            name: apt-transport-https
            state: present

        - name: Add Helm GPG key and repo (Debian)
          ansible.builtin.shell: |
            curl https://baltocdn.com/helm/signing.asc | apt-key add -
            echo "deb https://baltocdn.com/helm/stable/debian/ all main" | tee /etc/apt/sources.list.d/helm-stable-debian.list
            apt update
          args:
            creates: /etc/apt/sources.list.d/helm-stable-debian.list

        - name: Install helm (Debian)
          ansible.builtin.apt:
            name: helm
            state: present
      when: ansible_facts['os_family'] == 'Debian'

    - block:
        - name: Add Helm repo and install (RHEL)
          ansible.builtin.shell: |
            curl https://baltocdn.com/helm/signing.asc | rpm --import -
            cat <<EOF > /etc/yum.repos.d/helm.repo
            [helm]
            name=Helm
            baseurl=https://baltocdn.com/helm/stable/rhel/
            enabled=1
            gpgcheck=1
            gpgkey=https://baltocdn.com/helm/signing.asc
            EOF
          args:
            creates: /etc/yum.repos.d/helm.repo

        - name: Install helm (RHEL)
          ansible.builtin.yum:
            name: helm
            state: present
      when: ansible_facts['os_family'] == 'RedHat'

    - block:
        - name: Install kubectl (Debian)
          ansible.builtin.shell: |
            curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
            echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list
            apt update
          args:
            creates: /etc/apt/sources.list.d/kubernetes.list

        - name: Install kubectl (Debian)
          ansible.builtin.apt:
            name: kubectl
            state: present
      when: ansible_facts['os_family'] == 'Debian'

    - block:
        - name: Install kubectl (RHEL)
          ansible.builtin.shell: |
            cat <<EOF > /etc/yum.repos.d/kubernetes.repo
            [kubernetes]
            name=Kubernetes
            baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
            enabled=1
            gpgcheck=1
            repo_gpgcheck=1
            gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
            EOF
          args:
            creates: /etc/yum.repos.d/kubernetes.repo

        - name: Install kubectl (RHEL)
          ansible.builtin.yum:
            name: kubectl
            state: present
      when: ansible_facts['os_family'] == 'RedHat'

    - block:
        - name: Install terraform (Debian)
          ansible.builtin.shell: |
            curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
            apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
            apt update
          args:
            creates: /etc/apt/sources.list.d/hashicorp.list

        - name: Install terraform (Debian)
          ansible.builtin.apt:
            name: terraform
            state: present
      when: ansible_facts['os_family'] == 'Debian'

    - block:
        - name: Install terraform (RHEL)
          ansible.builtin.shell: |
            cat <<EOF > /etc/yum.repos.d/hashicorp.repo
            [hashicorp]
            name=HashiCorp Stable - $basearch
            baseurl=https://rpm.releases.hashicorp.com/RHEL/
            enabled=1
            gpgcheck=1
            gpgkey=https://rpm.releases.hashicorp.com/gpg
            EOF
          args:
            creates: /etc/yum.repos.d/hashicorp.repo

        - name: Install terraform (RHEL)
          ansible.builtin.yum:
            name: terraform
            state: present
      when: ansible_facts['os_family'] == 'RedHat'

    - block:
        - name: Install packer (Debian)
          ansible.builtin.apt:
            name: packer
            state: present
      when: ansible_facts['os_family'] == 'Debian'

    - block:
        - name: Install packer (RHEL)
          ansible.builtin.yum:
            name: packer
            state: present
      when: ansible_facts['os_family'] == 'RedHat'

    - block:
        - name: Install Visual Studio Code (Debian)
          ansible.builtin.shell: |
            curl -L https://code.visualstudio.com/sha/download?build=stable&os=linux-deb-x64 -o vscode.deb
            apt install -y ./vscode.deb
          args:
            creates: /usr/bin/code
      when: ansible_facts['os_family'] == 'Debian'

    - block:
        - name: Install Visual Studio Code (RHEL)
          ansible.builtin.shell: |
            rpm --import https://packages.microsoft.com/keys/microsoft.asc
            cat <<EOF > /etc/yum.repos.d/vscode.repo
            [code]
            name=Visual Studio Code
            baseurl=https://packages.microsoft.com/yumrepos/vscode
            enabled=1
            gpgcheck=1
            gpgkey=https://packages.microsoft.com/keys/microsoft.asc
            EOF
            yum check-update
            yum install -y code
          args:
            creates: /usr/bin/code
      when: ansible_facts['os_family'] == 'RedHat'
